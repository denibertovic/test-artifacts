name: "CI"
on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag_sha: ${{ steps.sha.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
      - name: Building project
        run: echo "building project..."
      - id: version
        run: echo "::set-output name=version::$(cat VERSION)"
      - id: sha
        run: echo "::set-output name=sha::$(echo $GITHUB_SHA)"
      - name: Create release artifact
        run: |
          mkdir release
          cd release
          echo "dinamo" > dinamo.txt
          echo "$GITHUB_SHA" > sha.txt
          cp ../README.md .
          tar --xform=s:'\./\?':: -czf ../artifact-${{ steps.version.outputs.version }}-linux-x86_64.tar.gz ./
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: artifact-${{ steps.version.outputs.version }}-linux-x86_64.tar.gz
          if-no-files-found: error
      - name: Delete artifact(s)
        run: |
          rm -r release
          rm artifact*.tar.gz
      - name: Debug
        run: ls -l
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: Debug
        run: ls -l
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: debug 1
        run: |
          ls -la
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: debug 2
        run: |
          ls -la
      - name: Create release and upload artifact
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ env.GITHUB_REF_NAME }}
          tag_name: v${{ env.GITHUB_REF_NAME }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            WARNING - This is an automated description. Please update!
          files: artifact-${{ needs.build.outputs.version }}-linux-x86_64.tar.gz
      - name: debug
        run: |
          ls -l
          mkdir dinamo
          tar zxvf artifact-${{ needs.build.outputs.version }}-linux-x86_64.tar.gz -C dinamo
          ls -l dinamo
          cat dinamo/sha.txt

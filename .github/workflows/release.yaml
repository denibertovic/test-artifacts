on:
  workflow_run:
    workflows: ["Build"]
    branches: ["master"]
    # tags:
    #   - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    types:
      - completed

name: Create Release

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: version
        run: echo "::set-output name=version::$(cat VERSION)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          # Optional, GitHub token
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Required, workflow file name or ID
          workflow: build.yaml
          # Optional, the status or conclusion of a completed workflow to search for
          # Can be one of a workflow conculsion::
          # "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
          # Or a workflow status:
          # "completed", "in_progress", "queued"
          # Default: "completed"
          workflow_conclusion: success
          # Optional, will get head commit SHA
          # pr: ${{github.event.pull_request.number}}
          # Optional, no need to specify if PR is
          # commit: ${{github.event.pull_request.head.sha}}
          # Optional, will use the branch
          branch: master
          # Optional, will use specified workflow run
          # run_id: 1122334455
          # Optional, uploaded artifact name,
          # will download all artifacts if not specified
          # and extract them in respective subdirectories
          # https://github.com/actions/download-artifact#download-all-artifacts
          name: build-artifact
          # Optional, directory where to extract artifact
          path: ./
          # Optional, defaults to current repo
          # repo: ${{github.repository}}
      - name: debug
        run: ls -l
      - name: Upload Release Artifact(s)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact-${{ steps.version.outputs.version }}-linux-x86_64.tar.gz
          asset_name: artifact-${{ steps.version.outputs.version }}-linux-x86_64.tar.gz
          asset_content_type: application/gzip
